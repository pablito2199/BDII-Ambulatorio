/*
 * VCategoria.java
 *
 * Created on 16-feb-2011, 18:17:07
 */
package gui;

import aplicacion.Categoria;
import java.util.ArrayList;

/**
 *
 * @author alumno
 */
public class VCategoria extends javax.swing.JDialog {

    private VPrincipal padre;                         //Enlace a la ventana padre
    private aplicacion.FachadaAplicacion fa;    //Enace a la fachada de aplicación
    private java.util.List<Categoria> cat;        //Listado de categorías

    /**
     * Creates new form VCategoria
     *
     * @param parent
     * @param modal
     * @param fa
     */
    //Constructor de la ventana
    public VCategoria(java.awt.Frame parent, boolean modal, aplicacion.FachadaAplicacion fa) {
        super(parent, modal);
        this.fa = fa;
        initComponents();
        padre = (VPrincipal) parent;

        //Lo primero que hacemos es buscar las categorías existentes
        buscarCategorias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        varNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnNuevaCategoria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCategorias = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        btnBorrarCategoria = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        varDescripcion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de categorias");
        setResizable(false);

        btnSalir.setText("Regresar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel10.setText("GESTIONAR CATEGORIAS");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Nombre:");

        jLabel3.setText("Descripcion:");

        btnNuevaCategoria.setText("Añadir");
        btnNuevaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCategoriaActionPerformed(evt);
            }
        });

        lstCategorias.setModel(new ModeloListaStrings());
        lstCategorias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstCategorias);

        jLabel7.setText("Categorias:");

        btnBorrarCategoria.setText("Borrar");
        btnBorrarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCategoriaActionPerformed(evt);
            }
        });

        varDescripcion.setColumns(20);
        varDescripcion.setLineWrap(true);
        varDescripcion.setRows(5);
        jScrollPane2.setViewportView(varDescripcion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(varNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNuevaCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBorrarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(varNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevaCategoria)
                            .addComponent(btnBorrarCategoria)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(jLabel10))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Función que cierra la ventana VCategoria creada
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed

        //Buscamos los libros de nuevo
        padre.buscarLibros();
        //Eliminamos esta ventana
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    //Permite buscar todas las categorías existentes en la base de datos
    private void buscarCategorias() {
        //Declaramos variables e instanciamos
        ModeloListaStrings mListaCategorias = new ModeloListaStrings();
        lstCategorias.setModel(mListaCategorias);
        java.util.List<String> n = new ArrayList<String>();

        //Buscamos las categorías
        cat = fa.consultarCategorias();

        //Para cada categoría encontrada 
        for (Categoria c : cat) {
            //Guardamo su nombre en un array
            n.add(c.getNombre());
        }

        //Metemos el array con el nombre de las categorías en la tabla
        mListaCategorias.setElementos(n);
        //Si no hay cateogorías en la tabla
        if (mListaCategorias.getSize() > 0) {
            //Seleccionamos el primer elemento automáticamente
            lstCategorias.setSelectedIndex(0);
            //Hacemos visible en botón de borrar elemento
            btnBorrarCategoria.setEnabled(true);
        } else {
            //En caso de que no haya categorías a mostrar se oculta el botón de borrado
            btnBorrarCategoria.setEnabled(false);
        }
    }

    //Permite crear una nueva categoría
    private void btnNuevaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCategoriaActionPerformed

        //Declaramos la tabla y la instanciamos
        ModeloListaStrings ma;
        ma = (ModeloListaStrings) lstCategorias.getModel();

        //Si se ha introducido un nombre para la categoría
        //No se requiere que se haya introducido una descripción para la misma porque en el diccionario 
        //de datos se especifica que puede ser nulo
        if ((varNombre.getText() != null)) {
            //Se crea la categoría
            fa.nuevaCategoria(varNombre.getText(), varDescripcion.getText());
            //Se hace visible el botón de borrado
            btnBorrarCategoria.setEnabled(true);
        }
        //Tras esto buscamos categorías
        buscarCategorias();
        //Se poner e hover sobre la última categoría introducida automáticamente
        if ((varNombre.getText() != null)) {
            lstCategorias.setSelectedIndex(ma.getSize());
        }
        //Y setteamos el nombre y la descripción a null por si se quiere introducir otra
        varNombre.setText(null);
        varDescripcion.setText(null);
    }//GEN-LAST:event_btnNuevaCategoriaActionPerformed

    //Permite borrar una categoría del sistema
    private void btnBorrarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCategoriaActionPerformed

        //Declaramos la tabla y la instanciamos
        ModeloListaStrings ma;
        ma = (ModeloListaStrings) lstCategorias.getModel();

        //Eliminamos la categoría seleccionada
        fa.eliminarCategoria(ma.getElementAt(lstCategorias.getSelectedIndex()));
        //Seleccionamos el último elemento 
        lstCategorias.setSelectedIndex(ma.getSize() - 1);

        //Miramos el estado del botón de borrado
        if (ma.getSize() > 0) {
            //Hacemos visible en botón de borrar elemento
            btnBorrarCategoria.setEnabled(true);
        } else {
            //En caso de que no haya categorías a mostrar se oculta el botón de borrado
            btnBorrarCategoria.setEnabled(false);
        }

        //Y setteamos el nombre y la descripción a null por si se quiere introducir otra
        varNombre.setText(null);
        varDescripcion.setText(null);
        
        //Buscamos categorías para actualizar la tabla
        buscarCategorias();
    }//GEN-LAST:event_btnBorrarCategoriaActionPerformed

    //Evento que se acciona cuando se hace click en la tabla de categorías
    private void tablaCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriasMouseClicked


        //Declaramos la tabla y la instanciamos
        ModeloListaStrings c = (ModeloListaStrings) lstCategorias.getModel();

        //Metemos en el campo nombre el nombre de la categoría seleccionada
        varNombre.setText(c.getElementAt(lstCategorias.getSelectedIndex()));
        //Para todas las categorías de la lista
        for (Categoria cc : cat) {
            //Si alguna coincide con el nombre que buscamos
            if (c.getElementAt(lstCategorias.getSelectedIndex()).equals(cc.getNombre())) {
                //Obtenemos su descripción y la metenmos en el campo descripción
                varDescripcion.setText(cc.getDescripcion());
                break;
            }
        }
    }//GEN-LAST:event_tablaCategoriasMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarCategoria;
    private javax.swing.JButton btnNuevaCategoria;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstCategorias;
    private javax.swing.JTextArea varDescripcion;
    private javax.swing.JTextField varNombre;
    // End of variables declaration//GEN-END:variables

}
